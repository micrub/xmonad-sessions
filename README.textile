h1. xmonad-sessions

xmonad-sessions is a way to use xmonad to control which of your applications 
persist and are easily restored.

h2. Installing

<pre><code>
$ mkdir -p ~/github
$ cd ~/github
$ git clone https://github.com/zaxtax/xmonad-sessions
$ cd xmonad-sessions
$ cabal update
$ cabal install MissingH
$ mkdir -p ~/.xmonad/lib
$ cp ViewDoc.hs ~/.xmonad/lib
</code></pre>

Compile <var>saveDocument.hs</var> and *<var>`loadDocuments.hs(???)</var>* and place them `*PATH*`:

<pre><code>
$ ghc --make saveDocument
$ mv saveDocument ~/bin
</code></pre>

Symlink all applications you want session saved:

<pre><code>
$ ln -s ~/bin/saveDocument ~/bin/gv
$ ln -s ~/bin/saveDocument ~/bin/evince
</code></pre>

Modify `~/.xmonad/xmonad.hs`

<pre><code>
import XMonad
import qualified Data.Map as M
import ViewDoc

myLogHook :: X ()
myLogHook = do ewmhDesktopsLogHook
               colorSaved

mykeys (XConfig {modMask = modm}) = M.fromList $
   [  ((modm, xK_s), toggleSaveState)
   ,  ((modm .|. shiftMask, xK_s), launchDocuments)
   ]

main = xmonad $ defaultConfig 
       { loghook = myLogHook
       , keys    = (\c -> mykeys c `M.union` keys defaultConfig c)
       }
</code></pre>



h2. Using

If you want to save any window focus over it and Mod-s.
Mod-s again will untoggle it

To restore all previous windows saved Mod-S

All applications that have been wrapped with saveDocument will be restorable
